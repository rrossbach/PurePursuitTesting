// automatically generated by the FlatBuffers compiler, do not modify

package org.sch.vulcanrobotics.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
/**
 * Pose2d is a translation and a rotation
 *    - translation is aribitrary units;  rotation is in radians
 */
public final class Pose2d_fb extends Table {
  public static Pose2d_fb getRootAsPose2d_fb(ByteBuffer _bb) { return getRootAsPose2d_fb(_bb, new Pose2d_fb()); }
  public static Pose2d_fb getRootAsPose2d_fb(ByteBuffer _bb, Pose2d_fb obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Pose2d_fb __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double x() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double y() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double cosTheta() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double sinTheta() { int o = __offset(10); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createPose2d_fb(FlatBufferBuilder builder,
      double x,
      double y,
      double cosTheta,
      double sinTheta) {
    builder.startObject(4);
    Pose2d_fb.addSinTheta(builder, sinTheta);
    Pose2d_fb.addCosTheta(builder, cosTheta);
    Pose2d_fb.addY(builder, y);
    Pose2d_fb.addX(builder, x);
    return Pose2d_fb.endPose2d_fb(builder);
  }

  public static void startPose2d_fb(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addX(FlatBufferBuilder builder, double x) { builder.addDouble(0, x, 0.0); }
  public static void addY(FlatBufferBuilder builder, double y) { builder.addDouble(1, y, 0.0); }
  public static void addCosTheta(FlatBufferBuilder builder, double cosTheta) { builder.addDouble(2, cosTheta, 0.0); }
  public static void addSinTheta(FlatBufferBuilder builder, double sinTheta) { builder.addDouble(3, sinTheta, 0.0); }
  public static int endPose2d_fb(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

